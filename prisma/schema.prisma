// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String?
  avatar    String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // likeMovies UserLikesMovies[]
}

// model UserLikesMovies {
//   User      User?    @relation(fields: [userId], references: [id])
//   userId    String
//   Movies    Movies?  @relation(fields: [moviesId], references: [id])
//   moviesId  String
//   like      Boolean  @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@id([userId, moviesId])
// }

model Movies {
  id          String     @id @default(uuid())
  title       String
  cover       String?
  description String?
  year        Int?
  duration    String?
  rating      Float?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  // likeUser    UserLikesMovies[]
  trailers    Trailers[]
}

model Trailers {
  id       String  @id @default(uuid())
  title    String?
  url      String
  Movies   Movies? @relation(fields: [moviesId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  moviesId String?
}

// model Actors {
//   id     String    @id @default(uuid())
//   name   String    @unique
//   birth  DateTime?
//   movies Movies[]
// }

// model Genders {
//   id     String   @id @default(uuid())
//   name   String   @unique
//   movies Movies[]
// }

// model Producers {
//   id      String   @id @default(uuid())
//   name    String   @unique
//   site    String?
//   address String?
//   movies  Movies[]
// }

// model Images {
//   id     String   @id @default(uuid())
//   url    String
//   title  String?
//   Movies Movies[]
//   User   User[]
// }
